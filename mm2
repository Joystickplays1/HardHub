local v0 = string.char;
local v1 = string.byte;
local v2 = string.sub;
local v3 = bit32 or bit;
local v4 = v3.bxor;
local v5 = table.concat;
local v6 = table.insert;
local function v7(v24, v25)
	local v26 = {};
	for v41 = 1, #v24 do
		v6(v26, v0(v4(v1(v2(v24, v41, v41 + 1)), v1(v2(v25, 1 + (v41 % #v25), 1 + (v41 % #v25) + 1))) % 256));
	end
	return v5(v26);
end
local v8 = tonumber;
local v9 = string.byte;
local v10 = string.char;
local v11 = string.sub;
local v12 = string.gsub;
local v13 = string.rep;
local v14 = table.concat;
local v15 = table.insert;
local v16 = math.ldexp;
local v17 = getfenv or function()
	return _ENV;
end;
local v18 = setmetatable;
local v19 = pcall;
local v20 = select;
local v21 = unpack or table.unpack;
local v22 = tonumber;
local function v23(v27, v28, ...)
	local v29 = 1;
	local v30;
	v27 = v12(v11(v27, 5), v7("\18\53", "\135\60\27\17\89"), function(v42)
		if (v9(v42, 2) == 79) then
			local v92 = 0;
			while true do
				if (0 == v92) then
					v30 = v8(v11(v42, 2 - 1, 1));
					return "";
				end
			end
		else
			local v93 = v10(v8(v42, 16));
			if v30 then
				local v101 = 0;
				local v102;
				while true do
					if (0 == v101) then
						v102 = v13(v93, v30);
						v30 = nil;
						v101 = 1;
					end
					if (v101 == 1) then
						return v102;
					end
				end
			else
				return v93;
			end
		end
	end);
	local function v31(v43, v44, v45)
		if v45 then
			local v94 = (v43 / (2 ^ (v44 - 1))) % (2 ^ (((v45 - 1) - (v44 - 1)) + 1));
			return v94 - (v94 % 1);
		else
			local v95 = 0;
			local v96;
			while true do
				if (v95 == 0) then
					v96 = (5 - 3) ^ (v44 - 1);
					return (((v43 % (v96 + v96)) >= v96) and 1) or (0 - 0);
				end
			end
		end
	end
	local function v32()
		local v46 = v9(v27, v29, v29);
		v29 = v29 + 1;
		return v46;
	end
	local function v33()
		local v47 = 0;
		local v48;
		local v49;
		while true do
			if (v47 == 0) then
				v48, v49 = v9(v27, v29, v29 + 2);
				v29 = v29 + 2;
				v47 = 1;
			end
			if (v47 == 1) then
				return (v49 * 256) + v48;
			end
		end
	end
	local function v34()
		local v50 = 0;
		local v51;
		local v52;
		local v53;
		local v54;
		while true do
			if (1 == v50) then
				return (v54 * 16777216) + (v53 * 65536) + (v52 * 256) + v51;
			end
			if (v50 == 0) then
				v51, v52, v53, v54 = v9(v27, v29, v29 + 3);
				v29 = v29 + 4;
				v50 = 1;
			end
		end
	end
	local function v35()
		local v55 = v34();
		local v56 = v34();
		local v57 = 1;
		local v58 = (v31(v56, 1, 20) * (2 ^ 32)) + v55;
		local v59 = v31(v56, 21, 79 - 48);
		local v60 = ((v31(v56, 32) == (620 - (555 + 64))) and -(932 - (857 + 74))) or 1;
		if (v59 == 0) then
			if (v58 == 0) then
				return v60 * 0;
			else
				local v103 = 0;
				while true do
					if (v103 == 0) then
						v59 = 1;
						v57 = 0;
						break;
					end
				end
			end
		elseif (v59 == 2047) then
			return ((v58 == 0) and (v60 * (1 / 0))) or (v60 * NaN);
		end
		return v16(v60, v59 - 1023) * (v57 + (v58 / (2 ^ (620 - (367 + 201)))));
	end
	local function v36(v61)
		local v62 = 0;
		local v63;
		local v64;
		while true do
			if (2 == v62) then
				v64 = {};
				for v104 = 1, #v63 do
					v64[v104] = v10(v9(v11(v63, v104, v104)));
				end
				v62 = 3;
			end
			if (0 == v62) then
				v63 = nil;
				if not v61 then
					v61 = v34();
					if (v61 == 0) then
						return "";
					end
				end
				v62 = 1;
			end
			if (v62 == 1) then
				v63 = v11(v27, v29, (v29 + v61) - 1);
				v29 = v29 + v61;
				v62 = 2;
			end
			if (v62 == 3) then
				return v14(v64);
			end
		end
	end
	local v37 = v34;
	local function v38(...)
		return {...}, v20("#", ...);
	end
	local function v39()
		local v65 = 0;
		local v66;
		local v67;
		local v68;
		local v69;
		local v70;
		local v71;
		while true do
			if (v65 == 0) then
				v66 = {};
				v67 = {};
				v68 = {};
				v69 = {v66,v67,nil,v68};
				v65 = 1;
			end
			if (v65 == 1) then
				v70 = v34();
				v71 = {};
				for v106 = 1, v70 do
					local v107 = 0;
					local v108;
					local v109;
					while true do
						if (v107 == 1) then
							if (v108 == 1) then
								v109 = v32() ~= (927 - (214 + 713));
							elseif (v108 == 2) then
								v109 = v35();
							elseif (v108 == (1 + 2)) then
								v109 = v36();
							end
							v71[v106] = v109;
							break;
						end
						if (v107 == 0) then
							v108 = v32();
							v109 = nil;
							v107 = 1;
						end
					end
				end
				v69[3] = v32();
				v65 = 2;
			end
			if (2 == v65) then
				for v110 = 1, v34() do
					local v111 = 0;
					local v112;
					while true do
						if (v111 == 0) then
							v112 = v32();
							if (v31(v112, 1, 1) == 0) then
								local v120 = 0;
								local v121;
								local v122;
								local v123;
								while true do
									if (v120 == 2) then
										if (v31(v122, 1, 1 + 0) == 1) then
											v123[2] = v71[v123[2]];
										end
										if (v31(v122, 2, 2) == 1) then
											v123[3] = v71[v123[3]];
										end
										v120 = 3;
									end
									if (v120 == 1) then
										v123 = {v33(),v33(),nil,nil};
										if (v121 == 0) then
											v123[3] = v33();
											v123[4] = v33();
										elseif (v121 == 1) then
											v123[3] = v34();
										elseif (v121 == 2) then
											v123[3] = v34() - (2 ^ 16);
										elseif (v121 == (1 + 2)) then
											local v353 = 0;
											while true do
												if (v353 == 0) then
													v123[880 - (282 + 595)] = v34() - (2 ^ (1653 - (1523 + 114)));
													v123[4] = v33();
													break;
												end
											end
										end
										v120 = 2;
									end
									if (v120 == 0) then
										v121 = v31(v112, 2, 3);
										v122 = v31(v112, 4, 6);
										v120 = 1;
									end
									if (v120 == 3) then
										if (v31(v122, 3, 3 - 0) == 1) then
											v123[4] = v71[v123[4]];
										end
										v66[v110] = v123;
										break;
									end
								end
							end
							break;
						end
					end
				end
				for v113 = 1, v34() do
					v67[v113 - 1] = v39();
				end
				return v69;
			end
		end
	end
	local function v40(v72, v73, v74)
		local v75 = v72[1];
		local v76 = v72[2];
		local v77 = v72[3];
		return function(...)
			local v78 = v75;
			local v79 = v76;
			local v80 = v77;
			local v81 = v38;
			local v82 = 1;
			local v83 = -1;
			local v84 = {};
			local v85 = {...};
			local v86 = v20("#", ...) - 1;
			local v87 = {};
			local v88 = {};
			for v97 = 0, v86 do
				if (v97 >= v80) then
					v84[v97 - v80] = v85[v97 + 1];
				else
					v88[v97] = v85[v97 + 1];
				end
			end
			local v89 = (v86 - v80) + 1;
			local v90;
			local v91;
			while true do
				v90 = v78[v82];
				v91 = v90[1];
				if (v91 <= 45) then
					if (v91 <= 22) then
						if (v91 <= 10) then
							if (v91 <= 4) then
								if (v91 <= 1) then
									if (v91 == 0) then
										if not v88[v90[2]] then
											v82 = v82 + 1;
										else
											v82 = v90[3];
										end
									else
										local v133 = v90[2];
										v88[v133] = v88[v133]();
									end
								elseif (v91 <= 2) then
									do
										return;
									end
								elseif (v91 > 3) then
									local v199 = v90[2];
									v88[v199](v21(v88, v199 + 1, v83));
								else
									local v200 = 0;
									local v201;
									local v202;
									local v203;
									while true do
										if (v200 == 0) then
											v201 = v79[v90[3]];
											v202 = nil;
											v200 = 1;
										end
										if (v200 == 1) then
											v203 = {};
											v202 = v18({}, {[v7("\117\241\124\116\64\79\214", "\36\42\174\21\26")]=function(v354, v355)
												local v356 = 0;
												local v357;
												while true do
													if (v356 == 0) then
														v357 = v203[v355];
														return v357[1][v357[2]];
													end
												end
											end,[v7("\47\8\175\75\7\62\175\74\21\47", "\46\112\87\193")]=function(v358, v359, v360)
												local v361 = 0;
												local v362;
												while true do
													if (v361 == 0) then
														v362 = v203[v359];
														v362[1066 - (68 + 997)][v362[2]] = v360;
														break;
													end
												end
											end});
											v200 = 2;
										end
										if (v200 == 2) then
											for v363 = 1271 - (226 + 1044), v90[4] do
												local v364 = 0;
												local v365;
												while true do
													if (v364 == 1) then
														if (v365[1] == 56) then
															v203[v363 - 1] = {v88,v365[12 - 9]};
														else
															v203[v363 - (118 - (32 + 85))] = {v73,v365[3]};
														end
														v87[#v87 + 1] = v203;
														break;
													end
													if (v364 == 0) then
														v82 = v82 + 1;
														v365 = v78[v82];
														v364 = 1;
													end
												end
											end
											v88[v90[2]] = v40(v201, v202, v74);
											break;
										end
									end
								end
							elseif (v91 <= 7) then
								if (v91 <= 5) then
									if (v88[v90[2]] ~= v88[v90[4]]) then
										v82 = v82 + 1;
									else
										v82 = v90[3];
									end
								elseif (v91 > 6) then
									local v205 = 0;
									local v206;
									local v207;
									local v208;
									while true do
										if (v205 == 1) then
											v208 = v88[v206] + v207;
											v88[v206] = v208;
											v205 = 2;
										end
										if (v205 == 2) then
											if (v207 > 0) then
												if (v208 <= v88[v206 + 1]) then
													local v410 = 0;
													while true do
														if (v410 == 0) then
															v82 = v90[3];
															v88[v206 + 3] = v208;
															break;
														end
													end
												end
											elseif (v208 >= v88[v206 + 1 + 0]) then
												local v411 = 0;
												while true do
													if (v411 == 0) then
														v82 = v90[3];
														v88[v206 + 3] = v208;
														break;
													end
												end
											end
											break;
										end
										if (v205 == 0) then
											v206 = v90[2];
											v207 = v88[v206 + 2];
											v205 = 1;
										end
									end
								else
									v88[v90[1 + 1]][v88[v90[3]]] = v88[v90[4]];
								end
							elseif (v91 <= 8) then
								local v135 = 0;
								local v136;
								local v137;
								local v138;
								local v139;
								while true do
									if (v135 == 1) then
										v83 = (v138 + v136) - 1;
										v139 = 0;
										v135 = 2;
									end
									if (v135 == 0) then
										v136 = v90[2];
										v137, v138 = v81(v88[v136](v88[v136 + 1]));
										v135 = 1;
									end
									if (v135 == 2) then
										for v322 = v136, v83 do
											local v323 = 0;
											while true do
												if (v323 == 0) then
													v139 = v139 + 1;
													v88[v322] = v137[v139];
													break;
												end
											end
										end
										break;
									end
								end
							elseif (v91 > 9) then
								if (v88[v90[2]] == v88[v90[4]]) then
									v82 = v82 + 1;
								else
									v82 = v90[3];
								end
							else
								v82 = v90[3];
							end
						elseif (v91 <= (973 - (892 + 65))) then
							if (v91 <= 13) then
								if (v91 <= 11) then
									local v140 = 0;
									local v141;
									local v142;
									while true do
										if (v140 == 0) then
											v141 = v90[2];
											v142 = v88[v90[3]];
											v140 = 1;
										end
										if (1 == v140) then
											v88[v141 + 1] = v142;
											v88[v141] = v142[v90[4]];
											break;
										end
									end
								elseif (v91 > 12) then
									v88[v90[2]] = v88[v90[3]] + v90[4];
								else
									v88[v90[2]] = v73[v90[7 - 4]];
								end
							elseif (v91 <= 14) then
								v82 = v90[3];
							elseif (v91 > (27 - 12)) then
								v88[v90[2]] = v88[v90[3]] - v88[v90[4]];
							else
								local v216 = v90[2];
								local v217 = v88[v216];
								local v218 = v88[v216 + 2];
								if (v218 > 0) then
									if (v217 > v88[v216 + 1]) then
										v82 = v90[4 - 1];
									else
										v88[v216 + 3] = v217;
									end
								elseif (v217 < v88[v216 + 1]) then
									v82 = v90[3];
								else
									v88[v216 + 3] = v217;
								end
							end
						elseif (v91 <= 19) then
							if (v91 <= 17) then
								local v144 = 0;
								local v145;
								local v146;
								local v147;
								local v148;
								while true do
									if (0 == v144) then
										v145 = v90[2];
										v146, v147 = v81(v88[v145](v21(v88, v145 + 1, v83)));
										v144 = 1;
									end
									if (v144 == 1) then
										v83 = (v147 + v145) - 1;
										v148 = 0;
										v144 = 2;
									end
									if (v144 == 2) then
										for v325 = v145, v83 do
											local v326 = 0;
											while true do
												if (v326 == 0) then
													v148 = v148 + 1;
													v88[v325] = v146[v148];
													break;
												end
											end
										end
										break;
									end
								end
							elseif (v91 == 18) then
								if (v88[v90[2]] ~= v88[v90[4]]) then
									v82 = v82 + (351 - (87 + 263));
								else
									v82 = v90[3];
								end
							else
								v88[v90[2]] = v88[v90[3]] % v90[184 - (67 + 113)];
							end
						elseif (v91 <= 20) then
							v73[v90[3]] = v88[v90[2]];
						elseif (v91 == 21) then
							local v220 = 0;
							local v221;
							while true do
								if (v220 == 0) then
									v221 = v90[2];
									v88[v221](v21(v88, v221 + 1 + 0, v90[3]));
									break;
								end
							end
						else
							local v222 = 0;
							local v223;
							local v224;
							while true do
								if (v222 == 1) then
									for v370 = 1, #v87 do
										local v371 = 0;
										local v372;
										while true do
											if (v371 == 0) then
												v372 = v87[v370];
												for v423 = 0, #v372 do
													local v424 = 0;
													local v425;
													local v426;
													local v427;
													while true do
														if (v424 == 1) then
															v427 = v425[2];
															if ((v426 == v88) and (v427 >= v223)) then
																local v451 = 0;
																while true do
																	if (0 == v451) then
																		v224[v427] = v426[v427];
																		v425[1] = v224;
																		break;
																	end
																end
															end
															break;
														end
														if (v424 == 0) then
															v425 = v372[v423];
															v426 = v425[1];
															v424 = 1;
														end
													end
												end
												break;
											end
										end
									end
									break;
								end
								if (v222 == 0) then
									v223 = v90[2];
									v224 = {};
									v222 = 1;
								end
							end
						end
					elseif (v91 <= 33) then
						if (v91 <= 27) then
							if (v91 <= 24) then
								if (v91 > 23) then
									v88[v90[2]] = {};
								else
									v88[v90[2]] = v74[v90[3]];
								end
							elseif (v91 <= 25) then
								local v154 = 0;
								local v155;
								while true do
									if (v154 == 0) then
										v155 = v90[4 - 2];
										do
											return v88[v155](v21(v88, v155 + 1, v90[3]));
										end
										break;
									end
								end
							elseif (v91 > 26) then
								local v225 = 0;
								local v226;
								while true do
									if (0 == v225) then
										v226 = v90[2 + 0];
										v88[v226](v21(v88, v226 + 1, v90[11 - 8]));
										break;
									end
								end
							else
								v88[v90[2]] = v88[v90[3]] % v88[v90[956 - (802 + 150)]];
							end
						elseif (v91 <= 30) then
							if (v91 <= 28) then
								do
									return v88[v90[5 - 3]]();
								end
							elseif (v91 == (52 - 23)) then
								if (v88[v90[2]] == v90[3 + 1]) then
									v82 = v82 + 1;
								else
									v82 = v90[3];
								end
							else
								v88[v90[999 - (915 + 82)]][v90[3]] = v90[4];
							end
						elseif (v91 <= 31) then
							for v192 = v90[2], v90[3] do
								v88[v192] = nil;
							end
						elseif (v91 > 32) then
							v88[v90[2]] = v88[v90[3]] + v88[v90[4]];
						else
							v88[v90[2]] = v90[3];
						end
					elseif (v91 <= 39) then
						if (v91 <= 36) then
							if (v91 <= 34) then
								local v156 = 0;
								local v157;
								while true do
									if (v156 == 0) then
										v157 = v90[2];
										do
											return v88[v157](v21(v88, v157 + 1, v90[3]));
										end
										break;
									end
								end
							elseif (v91 == 35) then
								for v310 = v90[2], v90[8 - 5] do
									v88[v310] = nil;
								end
							else
								do
									return v88[v90[2]]();
								end
							end
						elseif (v91 <= 37) then
							v88[v90[2]][v88[v90[3]]] = v90[4];
						elseif (v91 > 38) then
							local v233 = v90[2];
							local v234 = v88[v233];
							for v312 = v233 + 1 + 0, v83 do
								v15(v234, v88[v312]);
							end
						else
							local v235 = v90[2];
							v88[v235] = v88[v235](v21(v88, v235 + 1, v90[3 - 0]));
						end
					elseif (v91 <= (1229 - (1069 + 118))) then
						if (v91 <= 40) then
							v88[v90[2]] = #v88[v90[3]];
						elseif (v91 > 41) then
							local v237 = v90[2];
							v88[v237] = v88[v237](v21(v88, v237 + 1, v83));
						else
							local v239 = 0;
							local v240;
							local v241;
							local v242;
							while true do
								if (1 == v239) then
									v242 = v88[v240] + v241;
									v88[v240] = v242;
									v239 = 2;
								end
								if (v239 == 0) then
									v240 = v90[2];
									v241 = v88[v240 + 2];
									v239 = 1;
								end
								if (2 == v239) then
									if (v241 > 0) then
										if (v242 <= v88[v240 + 1]) then
											local v413 = 0;
											while true do
												if (v413 == 0) then
													v82 = v90[3];
													v88[v240 + 3] = v242;
													break;
												end
											end
										end
									elseif (v242 >= v88[v240 + (2 - 1)]) then
										local v414 = 0;
										while true do
											if (v414 == 0) then
												v82 = v90[3];
												v88[v240 + 3] = v242;
												break;
											end
										end
									end
									break;
								end
							end
						end
					elseif (v91 <= 43) then
						local v161 = v90[2];
						local v162, v163 = v81(v88[v161](v21(v88, v161 + 1, v90[6 - 3])));
						v83 = (v163 + v161) - 1;
						local v164 = 0;
						for v194 = v161, v83 do
							v164 = v164 + 1;
							v88[v194] = v162[v164];
						end
					elseif (v91 > 44) then
						local v243 = 0;

						local v244;
						local v245;
						while true do
							if (v243 == 1) then
								for v373 = 1, #v87 do
									local v374 = 0;
									local v375;
									while true do
										if (0 == v374) then
											v375 = v87[v373];
											for v428 = 0 + 0, #v375 do
												local v429 = 0;
												local v430;
												local v431;
												local v432;
												while true do
													if (v429 == 0) then
														v430 = v375[v428];
														v431 = v430[1];
														v429 = 1;
													end
													if (v429 == 1) then
														v432 = v430[2];
														if ((v431 == v88) and (v432 >= v244)) then
															local v452 = 0;
															while true do
																if (v452 == 0) then
																	v245[v432] = v431[v432];
																	v430[1] = v245;
																	break;
																end
															end
														end
														break;
													end
												end
											end
											break;
										end
									end
								end
								break;
							end
							if (v243 == 0) then
								v244 = v90[2];
								v245 = {};
								v243 = 1;
							end
						end
					else
						v88[v90[2]]();
					end
				elseif (v91 <= 68) then
					if (v91 <= 56) then
						if (v91 <= 50) then
							if (v91 <= (83 - 36)) then
								if (v91 == 46) then
									v88[v90[2]][v90[3]] = v88[v90[4]];
								else
									local v167 = 0;
									local v168;
									while true do
										if (v167 == 0) then
											v168 = v90[2];
											do
												return v21(v88, v168, v83);
											end
											break;
										end
									end
								end
							elseif (v91 <= 48) then
								local v169 = v90[2];
								v88[v169](v88[v169 + 1]);
							elseif (v91 == 49) then
								if v88[v90[2 + 0]] then
									v82 = v82 + 1;
								else
									v82 = v90[3];
								end
							else
								v88[v90[2]]();
							end
						elseif (v91 <= 53) then
							if (v91 <= 51) then
								v88[v90[2]] = v90[3] + v88[v90[4]];
							elseif (v91 == 52) then
								v88[v90[2]] = #v88[v90[3]];
							else
								local v247 = v90[793 - (368 + 423)];
								v88[v247] = v88[v247](v21(v88, v247 + 1, v90[3]));
							end
						elseif (v91 <= 54) then
							v88[v90[2]] = v88[v90[3]][v90[4]];
						elseif (v91 > 55) then
							v88[v90[6 - 4]] = v88[v90[3]];
						else
							v73[v90[3]] = v88[v90[2]];
						end
					elseif (v91 <= 62) then
						if (v91 <= 59) then
							if (v91 <= 57) then
								v88[v90[2]][v90[21 - (10 + 8)]] = v88[v90[4]];
							elseif (v91 > 58) then
								local v253 = v90[2];
								local v254 = v88[v90[11 - 8]];
								v88[v253 + 1] = v254;
								v88[v253] = v254[v90[446 - (416 + 26)]];
							else
								local v258 = 0;
								local v259;
								while true do
									if (v258 == 0) then
										v259 = v90[2];
										v88[v259] = v88[v259]();
										break;
									end
								end
							end
						elseif (v91 <= 60) then
							v88[v90[2]][v90[3]] = v90[4];
						elseif (v91 == 61) then
							local v260 = v90[6 - 4];
							v88[v260](v21(v88, v260 + 1, v83));
						else
							local v261 = 0;
							local v262;
							local v263;
							local v264;
							while true do
								if (v261 == 0) then
									v262 = v79[v90[3]];
									v263 = nil;
									v261 = 1;
								end
								if (v261 == 2) then
									for v376 = 1, v90[4] do
										local v377 = 0;
										local v378;
										while true do
											if (v377 == 1) then
												if (v378[1] == 56) then
													v264[v376 - (1 + 0)] = {v88,v378[3]};
												else
													v264[v376 - 1] = {v73,v378[3]};
												end
												v87[#v87 + 1] = v264;
												break;
											end
											if (v377 == 0) then
												v82 = v82 + 1;
												v378 = v78[v82];
												v377 = 1;
											end
										end
									end
									v88[v90[2]] = v40(v262, v263, v74);
									break;
								end
								if (v261 == 1) then
									v264 = {};
									v263 = v18({}, {[v7("\28\148\125\177\187\64\89", "\217\67\203\20\223\223\37\33")]=function(v379, v380)
										local v381 = 0;
										local v382;
										while true do
											if (0 == v381) then
												v382 = v264[v380];
												return v382[1][v382[2]];
											end
										end
									end,[v7("\178\151\74\213\161\188\180\137\173\92", "\218\237\200\36\176\214\213")]=function(v383, v384, v385)
										local v386 = v264[v384];
										v386[1][v386[2]] = v385;
									end});
									v261 = 2;
								end
							end
						end
					elseif (v91 <= 65) then
						if (v91 <= 63) then
							v88[v90[2]] = v88[v90[3]][v90[4]];
						elseif (v91 > 64) then
							v88[v90[2]] = v88[v90[3]] + v88[v90[4]];
						else
							v88[v90[2]][v88[v90[3]]] = v88[v90[4]];
						end
					elseif (v91 <= 66) then
						if v88[v90[2]] then
							v82 = v82 + (439 - (145 + 293));
						else
							v82 = v90[3];
						end
					elseif (v91 > 67) then
						local v269 = 0;
						local v270;
						local v271;
						local v272;
						local v273;
						while true do
							if (v269 == 1) then
								v83 = (v272 + v270) - (431 - (44 + 386));
								v273 = 0;
								v269 = 2;
							end
							if (v269 == 0) then
								v270 = v90[2];
								v271, v272 = v81(v88[v270](v88[v270 + 1]));
								v269 = 1;
							end
							if (v269 == 2) then
								for v388 = v270, v83 do
									local v389 = 0;
									while true do
										if (v389 == 0) then
											v273 = v273 + 1;
											v88[v388] = v271[v273];
											break;
										end
									end
								end
								break;
							end
						end
					else
						v88[v90[2]] = v88[v90[1489 - (998 + 488)]] + v90[4];
					end
				elseif (v91 <= (26 + 53)) then
					if (v91 <= 73) then
						if (v91 <= 70) then
							if (v91 > (57 + 12)) then
								do
									return;
								end
							else
								local v179 = 0;
								local v180;
								local v181;
								local v182;
								while true do
									if (v179 == 0) then
										v180 = v90[2];
										v181 = v88[v180];
										v179 = 1;
									end
									if (v179 == 1) then
										v182 = v88[v180 + 2];
										if (v182 > 0) then
											if (v181 > v88[v180 + 1]) then
												v82 = v90[3];
											else
												v88[v180 + (775 - (201 + 571))] = v181;
											end
										elseif (v181 < v88[v180 + 1]) then
											v82 = v90[3];
										else
											v88[v180 + 3] = v181;
										end
										break;
									end
								end
							end
						elseif (v91 <= (1209 - (116 + 1022))) then
							v88[v90[2]] = v73[v90[3]];
						elseif (v91 == 72) then
							v88[v90[2]] = v88[v90[12 - 9]] % v88[v90[3 + 1]];
						elseif (v88[v90[2]] == v88[v90[4]]) then
							v82 = v82 + 1;
						else
							v82 = v90[3];
						end
					elseif (v91 <= 76) then
						if (v91 <= 74) then
							if not v88[v90[2]] then
								v82 = v82 + 1;
							else
								v82 = v90[10 - 7];
							end
						elseif (v91 > 75) then
							if (v88[v90[2]] == v90[4]) then
								v82 = v82 + 1;
							else
								v82 = v90[3];
							end
						else
							local v277 = 0;
							local v278;
							while true do
								if (v277 == 0) then
									v278 = v90[7 - 5];
									do
										return v21(v88, v278, v83);
									end
									break;
								end
							end
						end
					elseif (v91 <= 77) then
						v88[v90[2]] = v90[3] + v88[v90[4]];
					elseif (v91 == 78) then
						v88[v90[2]] = v74[v90[862 - (814 + 45)]];
					else
						local v281 = v90[2];
						v88[v281](v88[v281 + 1]);
					end
				elseif (v91 <= 85) then
					if (v91 <= 82) then
						if (v91 <= 80) then
							local v186 = 0;
							local v187;
							while true do
								if (v186 == 0) then
									v187 = v90[4 - 2];
									v88[v187] = v88[v187](v21(v88, v187 + 1 + 0, v83));
									break;
								end
							end
						elseif (v91 > 81) then
							v88[v90[2]] = v88[v90[2 + 1]] % v90[4];
						else
							local v283 = 0;
							local v284;
							local v285;
							while true do
								if (1 == v283) then
									for v390 = v284 + 1, v83 do
										v15(v285, v88[v390]);
									end
									break;
								end
								if (v283 == 0) then
									v284 = v90[2];
									v285 = v88[v284];
									v283 = 1;
								end
							end
						end
					elseif (v91 <= 83) then
						v88[v90[2]] = v90[3] ~= (885 - (261 + 624));
					elseif (v91 == (148 - 64)) then
						local v286 = 0;
						local v287;
						local v288;
						local v289;
						local v290;
						while true do
							if (v286 == 1) then
								v83 = (v289 + v287) - 1;
								v290 = 0;
								v286 = 2;
							end
							if (v286 == 2) then
								for v391 = v287, v83 do
									local v392 = 0;
									while true do
										if (v392 == 0) then
											v290 = v290 + 1;
											v88[v391] = v288[v290];
											break;
										end
									end
								end
								break;
							end
							if (v286 == 0) then
								v287 = v90[2];
								v288, v289 = v81(v88[v287](v21(v88, v287 + 1, v90[3])));
								v286 = 1;
							end
						end
					else
						v88[v90[1082 - (1020 + 60)]] = {};
					end
				elseif (v91 <= 88) then
					if (v91 <= (1509 - (630 + 793))) then
						v88[v90[2]] = v88[v90[3]] - v88[v90[4]];
					elseif (v91 > 87) then
						v88[v90[2]] = v90[3];
					else
						v88[v90[2]] = v90[3] ~= 0;
					end
				elseif (v91 <= 89) then
					v88[v90[2]] = v88[v90[3]];
				elseif (v91 == 90) then
					local v295 = v90[2];
					local v296, v297 = v81(v88[v295](v21(v88, v295 + 1, v83)));
					v83 = (v297 + v295) - 1;
					local v298 = 0;
					for v319 = v295, v83 do
						local v320 = 0;
						while true do
							if (v320 == 0) then
								v298 = v298 + 1;
								v88[v319] = v296[v298];
								break;
							end
						end
					end
				else
					v88[v90[2]][v88[v90[3]]] = v90[4];
				end
				v82 = v82 + 1;
			end
		end;
	end
	return v40(v39(), {}, v28)(...);
end
return vv17(), ...);
